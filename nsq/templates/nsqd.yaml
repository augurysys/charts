apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.nsqd.name }}
  labels:
    app: {{ .Values.nsqd.name }}
    chart: {{ template "nsqd.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ .Values.nsqd.name }}
  selector:
    matchLabels:
      app: {{ .Values.nsqd.name }}
      release: {{ .Release.Name }}
  replicas: {{ .Values.nsqdReplicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Values.nsqd.name }}
        release: {{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: nsq-exporter
        image: emaincourt/nsq_exporter:1.1.0
        imagePullPolicy: Always
        command: ["sh", "-c"]
        env:
        - name: NAMESPACE
          value: {{ .Release.Namespace }}
        - name: NSQD-NAME
          value: {{ .Values.nsqd.name }}
        args:
        - /nsq_exporter -nsqd.addr=http://$HOSTNAME.$(NSQD-NAME).$(NAMESPACE).svc.cluster.local:4151/stats
        ports:
        - containerPort: 9117
          hostPort: 9117
      - name: {{ .Values.nsqd.name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["sh", "-c"]
        env:
        - name: NAMESPACE
          value: {{ .Release.Namespace }}
        - name: NSQD-NAME
          value: { { .Values.nsqd.name } }
        - name: NSQLOOKUPD-NAME
          value: { { .Values.nsqlookupd.name } }
        args:
        - |
          /nsqd -broadcast-address=$HOSTNAME.$(NSQD-NAME).$(NAMESPACE).svc.cluster.local \
          --max-req-timeout=3h0m0s \
          --max-msg-timeout=1h0m0s \
          {{- range $i, $e := until (int .Values.nsqlookupdReplicaCount) }}
          --lookupd-tcp-address=$(NSQLOOKUPD-NAME)-{{ $i }}.$(NSQLOOKUPD-NAME).$(NAMESPACE).svc.cluster.local:4160 \
          {{- end}}
          --data-path=/data \
          --mem-queue-size=0
        ports:
        - containerPort: 4150
          hostPort: 4150
        - containerPort: 4151
          hostPort: 4151
        livenessProbe:
          httpGet:
            path: /ping
            port: 4151
          initialDelaySeconds: 5
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /ping
            port: 4151
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
{{ toYaml .Values.resources | indent 12 }}
        volumeMounts:
        - name: {{ .Values.nsqd.volumeClaimTemplatesName }}
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.nsqd.volumeClaimTemplatesName }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "{{ .Values.dataVolumeClaim.storageClassName }}"
      resources:
        requests:
          storage: "{{ .Values.dataVolumeClaim.storage }}"
